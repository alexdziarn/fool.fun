services:
  # # Backend server
  # server:
  #   build: ./server
  #   ports:
  #     - "4001:4000"
  #   volumes:
  #     - ./server:/app
  #     - /app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - PINATA_JWT=${PINATA_JWT}
  #     - SERVER_PORT=4001
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_NAME=tokens_db
  #     - DB_USER=postgres
  #     - DB_PASSWORD=postgres
  #   env_file:
  #     - .env
  #   depends_on:
  #     - postgres

  # # Frontend client
  # client:
  #   build: ./client
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - ./client:/app
  #     - /app/node_modules
  #   environment:
  #     - VITE_GRAPHQL_URL=http://localhost:4001/graphql

  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: foolfun
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # # PgAdmin (optional)
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   ports:
  #     - "5050:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   depends_on:
  #     - postgres

  queue:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 10s
      retries: 5

  ipfs:
    build:
      context: .
      dockerfile: ipfs.dockerfile
    container_name: ipfs-node
    ports:
      - "4001:4001"  # Swarm
      - "5001:5001"  # API
      - "8080:8080"  # Gateway
    volumes:
      - ipfs_data:/data/ipfs
    restart: unless-stopped
    networks:
      - foolfun_network

volumes:
  postgres_data:
  rabbitmq_data:
  ipfs_data:

networks:
  foolfun_network:
    driver: bridge
